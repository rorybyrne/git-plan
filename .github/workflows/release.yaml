name: PyPi Publish
on:
  release:
    types: published

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9']
        include:
          - python-version: '3.8'
            tox_path: ./.tox/py38
          - python-version: '3.9'
            tox_path: ./.tox/py39
          - os: ubuntu-latest
            pip_path: ~/.cache/pip
          - os: macos-latest
            pip_path: ~/Library/Caches/pip
          - os: windows-latest
            pip_path: ~\AppData\Local\pip\Cache
    steps:
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache tox
        uses: actions/cache@v2
        with:
          path: ${{ matrix.tox_path }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-tox-${{ hashFiles('poetry.lock') }}
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Test with tox
        run: tox
  build-and-release:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.2
        with:
          virtualenvs-create: false
      - name: Install Dependencies
        run: poetry install
      - name: Configure PyPi token
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN  }}
      - name: Build
        run: poetry build
      - name: Publish
        run: poetry publish

